第12天课程 变量作用域

外部变量（全局变量）：
在函数外面定义的变量，作用域为整个源代码文件（包括其他文件），若未显式初始化，会被初始化为0；
仅当程序的所有或大部分函数都需要使用时，才声明为外部变量；
通常，使用const定义的符号常量应是外部的。
extern type name;  //当函数使用外部变量时，函数内部应用extern来声明（惯例）。
局部变量：
函数内部定义的变量，作用域为其所在的函数，不会被自动初始化，使用前必须明确赋值。

动态变量：
(auto) type name;   //每次调用函数时，重新创建变量，函数执行完毕后，变量实例被释放。
静态变量：
static type name；  //只在函数首次被调用时初始化一次，以后不会被初始化，保留前一次退出函数时的值。

静态外部变量：作用域区别，只位于其所在文件中，被定义之后的函数课件。

寄存器变量：
register type name;  //局部动态变量存储到寄存器，加快操纵变量的速度。只是申请，不能命令。

main() 函数中静态局部变量和动态局部变量之间没有任何差别。

C语言中的5种存储类型：
存储类型          关键字       生命周期      定义位置        作用域
动态变量          无           临时          函数内          局部
静态变量          static       临时          函数内          局部
寄存器变量        register     临时          函数内          局部
外部变量          无           永久          函数外          全局（所有文件）
静态外部变量      static       永久          函数外          全局（一个文件）

{}代码块    可以声明局部变量，但要位于开始位置。   不常用，主要用来隔离代码。

名称相同的局部变量和全局变量是两个完全不同的变量。

END
