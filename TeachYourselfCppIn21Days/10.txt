第10章 类和对象

C作为商业应用程序语言和汇编语言之间的中间语言而开发的，采用结构化编程。
复杂程序使用过程性语言会难以管理和维护，扩展费用高昂。
面向对象开发将数据结构和操纵数据的方法紧密联系在一起，考虑的个体是对象。
C++旨在面向对象编程和C语言之间架起一座桥梁。
变量类型提供的信息：变量在内存中的长度；变量可存储什么样的信息；可对变量执行什么样的操作。
C中，类型被内置到语言中；C++中，可以创建任何类型来进行扩展。  （C中可以用typedef来创建新的结构类型，但不可进行直接操作）
类：成员变量；成员函数。  成员函数通常操纵成员变量。
class className
{
  typename parameter;      //包含的数据
  typename function();     //有何功能
};    //类声明占用的内存=数据占用的内存；函数指战员存储它有关位置所需的空间，函数指针。
对象是类的实例。 赋值时给对象赋值   类里面不能有未声明的功能。
类声明中的重要关键字：public 和 private。 作用于类的成员：数据成员和成员方法。
private成员只能在类的方法中访问，public成员可用通过类的任何对象进行访问。默认情况下所有类成员都是private的。
通用设计规则：让类的数据成员为私有的。创建公有函数来设置和获取私有成员变量（类的成员函数，公有存取器方法）。
在以后修改数据的存储方式时，可以对类成员函数同步修改完成兼容，而不必修改所有外部调用函数。更易维护，延长生命周期。
C++的访问控制机理用于防范意外事件，而不是保护欺骗。by Stroustrup。
构造函数：根据需要接受参数，不能有返回值，用于初始化类的成员数据。
析构函数：在对象被销毁后完成清理工作并释放资源，没有参数，也没有返回值。析构函数只有一个。
没有参数的构造函数称作默认构造函数，可以自行编写。建议至少定义一个构造函数用于初始化成员变量。
声明了构造函数后建议声明析构函数，即使无内容。
const成员函数：成员函数声明时在分号之前加上const，表示此函数不会修改其所属类的任何数据成员。
类的声明和方法定义约定存放位置：类的声明放在头文件.h中，类方法的定义放在.cpp文件中并用#include进行管理。
大多数情况用户不关心实现细节，只阅读头文件就可以知道需要的信息。
类成员函数的内联实现：1.返回类型前加上关键字inline；2.将函数的定义放到类声明中。
也可以在类中将其他类用作成员和函数。
声明与定义的区别：声明只引入一个名称而不为其分配内存，而定义分配内存。
在C++中，class 和 struct 功能是完全相同的，只不过 class 默认私有，struct 默认公有。 属于兼容C的历史遗留问题。
类对象在内存中的大小由类成员变量大小的总和决定，类方法只占用少量的内存，存储方法位置信息（指针）。
